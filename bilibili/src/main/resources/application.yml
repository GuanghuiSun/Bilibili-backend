server:
  port: 8082

spring:
  application:
    name: bilibili-backend
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/bilibili?serverTimezone=UTC
      username: root
      password: root
      initialSize: 1
      minIdle: 3
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 30000
  redis:
    host:
    port: 6379
    password:
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        time-between-eviction-runs: 10s
  kafka:
    bootstrap-servers:
    producer: # 生产者
      retries: 3  #发送失败重试次数
      acks: all  #所有分区副本确认后，才算消息发送成功
      # 指定消息key和消息体的序列化编码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer: #消费者
      group-id: bilibili
      auto-offset-reset: latest
      # 自动确认
      enable-auto-commit: true
      auto-commit-interval: 100
      # 指定消息key和消息体的反序列化解码方式，与生产者序列化方式一一对应
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:  # 这个配置参数相对默认，会在下文中介绍
        spring:
          json:
            trusted:
              packages: '*'
  # 设置请求文件最大为100MB
  servlet:
    multipart:
      max-file-size: 100MB
      enabled: true
      max-request-size: 100MB

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDeleted
      id-type: auto

# slf4j日志配置
logging:
  # 配置级别
  level:
    root: info
    #分包配置级别，即不同的目录下可以使用不同的级别
    com.mall_admin: debug

# fastDFS
fdfs:
  tracker-list:
  http:
    storage-addr:
